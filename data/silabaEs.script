define Obs    [f|h|j|k|p|s|t|t s|t z|t x|x|z|b|d|g|v|d d|t t|m|n|ñ|c|q|w|c h|F|H|J|K|P|S|T|T S|T Z|T X|X|Z|B|D|G|V|D D|T T|M|N|Ñ|C|Q|W|C H];
define LiqGli [l|l l|r|r r|y|L|L L|R|R R|Y];

define LowV  [a|e|o|á|é|ó|"^E^"|"^ET^"|A|E|O|Á|É|Ó];
define HighV [i|u|í|ú|"^Y^"|"^YT^"|I|U|Í|Ú];
define HighnoaccV [i|u|"^Y^"|I|U];

define V LowV | HighV;

define accV [á|é|í|ó|ú|Á|É|Í|Ó|Ú|"^YT^"|"^ET^"];
define noaccV [a|e|i|o|u|"^Y^"|"^E^"|A|E|I|O|U];

define Nucleus [V | LowV HighnoaccV | HighnoaccV LowV | [HighV HighV - [i i] - [u u] - [u e] - [I I] - [U U] - [U E]]];

define Onset (Obs) (LiqGli);
define Coda Onset.r;

define Syllable Onset %{ Nucleus %} Coda;
# We pre-mark the nuclei with { ... } since otherwise the shortest-replace
# strategy would cut off the end of them
define MarkNuclei Nucleus @-> %{ ... %};
define MarkSyllable Syllable @> ... "." || _ Syllable ;
define CleanUp %{|%} -> 0 ;

#i}.{é
#define dipt %} %. %{ -> 0 || noaccV _ accV ;
define dipt ?* ;

#{aí}
#define hiato [...] -> %} %. %{ || noaccV _ accV ;
define hiato ?* ;

define gqiconv u i -> "^Y^" || [ q | g | G | Q ] _ ;
define gqiclean "^Y^" -> u i ;
define gqitconv u í -> "^YT^" || [ q | g | G | Q ] _ ;
define gqitclean "^YT^" -> u í ;
define gqeconv u e -> "^E^" || [ q | g | G | Q ] _ ;
define gqeclean "^E^" -> u e ;
define gqetconv u é -> "^ET^" || [ q | g | G | Q ] _ ;
define gqetclean "^ET^" -> u é ;

regex gqeconv .o. gqiconv .o. gqetconv .o. gqitconv .o. MarkNuclei .o. MarkSyllable .o. dipt .o. hiato .o. CleanUp .o. gqeclean .o. gqiclean .o. gqetclean .o. gqitclean;
save stack silabaEs.fst
#define banatzailea;
#define bokalakMarkatu [a|e|i|o|u] -> %[ ... %];
#define dipt %] %[ -> 0;
#regex banatzailea .o. bokalakMarkatu .o. dipt;
